{"pageProps":{"note":{"id":"cmfutyhgtl88lr1sike6zta","title":"Structured Streaming","desc":"","updated":1693717524978,"created":1669722226613,"custom":{},"fname":"dev.data+ai.spark.structured_streaming","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"6b7e287cff739eb9b2aafbefc890a2c8","links":[{"from":{"fname":"dev.data+ai.databricks.data+ai-summit-2022-keynote-summary","id":"0wwj1byxg3uhkh6el05q2o9","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":18,"column":13,"offset":306},"end":{"line":18,"column":55,"offset":348},"indent":[]},"value":"dev.data+ai.spark.structured_streaming"},{"from":{"fname":"dev.data+ai.databricks.delta_lake","id":"f5ta5qp6kvcp8x23oxfjwi2","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":7,"column":32,"offset":229},"end":{"line":7,"column":74,"offset":271},"indent":[]},"value":"dev.data+ai.spark.structured_streaming"},{"from":{"fname":"dev.data+ai.databricks.delta_live_tables","id":"hvd8818q6qo5xxfok5lhye7","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":3,"column":88,"offset":96},"end":{"line":3,"column":130,"offset":138},"indent":[]},"value":"dev.data+ai.spark.structured_streaming"}],"anchors":{"what":{"type":"header","text":"What","value":"what","line":8,"column":0,"depth":2},"why":{"type":"header","text":"Why","value":"why","line":14,"column":0,"depth":2},"how":{"type":"header","text":"How","value":"how","line":22,"column":0,"depth":2},"initialize-the-stream":{"type":"header","text":"Initialize the stream","value":"initialize-the-stream","line":24,"column":0,"depth":3},"start-the-streaming-job":{"type":"header","text":"Start the streaming job","value":"start-the-streaming-job","line":44,"column":0,"depth":3},"trigger":{"type":"header","text":"Trigger","value":"trigger","line":56,"column":0,"depth":2},"시간-기반-트리거-간격-지정":{"type":"header","text":"시간 기반 트리거 간격 지정","value":"시간-기반-트리거-간격-지정","line":58,"column":0,"depth":3},"증분-일괄-처리-구성":{"type":"header","text":"증분 일괄 처리 구성","value":"증분-일괄-처리-구성","line":62,"column":0,"depth":2},"reference":{"type":"header","text":"Reference","value":"reference","line":66,"column":0,"depth":2}},"children":[],"parent":"mvmjei3kla5158ugqpwf79z","data":{}},"body":"<h1 id=\"structured-streaming\">Structured Streaming<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#structured-streaming\"></a></h1>\n<h2 id=\"what\">What<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what\"></a></h2>\n<ul>\n<li>Structured stream에서 data stream은 계속해서 append되는 테이블로 간주됨</li>\n</ul>\n<p><img src=\"https://learn.microsoft.com/en-us/azure/databricks/_static/images/getting-started/gsasg-spark-streaming-workflow.png\"></p>\n<h2 id=\"why\">Why<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#why\"></a></h2>\n<ul>\n<li>이렇게 하면 stream processing model을 batch processing model처럼 처리할 수 있음</li>\n</ul>\n<p><img src=\"https://learn.microsoft.com/en-us/azure/databricks/_static/images/getting-started/gsasg-spark-streaming-model.png\"></p>\n<ul>\n<li>시간이 지날수록 새로운 row가 입력 테이블에 append되는 꼴이 되며 (Input), 이 테이블을 query하면 (Query), 결과 테이블도 계속 업데이트됨 (Output)</li>\n</ul>\n<h2 id=\"how\">How<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how\"></a></h2>\n<h3 id=\"initialize-the-stream\">Initialize the stream<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#initialize-the-stream\"></a></h3>\n<pre class=\"language-python\"><code class=\"language-python\">streamingInputDF <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  spark\n    <span class=\"token punctuation\">.</span>readStream\n    <span class=\"token punctuation\">.</span>schema<span class=\"token punctuation\">(</span>jsonSchema<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>option<span class=\"token punctuation\">(</span><span class=\"token string\">\"maxFilesPerTrigger\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"json\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span>inputPath<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\nstreamCountsDF <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  streamingInputDF\n    <span class=\"token punctuation\">.</span>groupBy<span class=\"token punctuation\">(</span>\n      streamingInputDF<span class=\"token punctuation\">.</span>action<span class=\"token punctuation\">,</span>\n      window<span class=\"token punctuation\">(</span>streamingInputDF<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">,</span> <span class=\"token string\">\"1 hour\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"start-the-streaming-job\">Start the streaming job<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#start-the-streaming-job\"></a></h3>\n<pre class=\"language-python\"><code class=\"language-python\">query <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  streamingCountsDF\n    <span class=\"token punctuation\">.</span>writeStream\n    <span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"memory\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>queryName<span class=\"token punctuation\">(</span><span class=\"token string\">\"counts\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>outputMode<span class=\"token punctuation\">(</span><span class=\"token string\">\"complete\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"trigger\">Trigger<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#trigger\"></a></h2>\n<h3 id=\"시간-기반-트리거-간격-지정\">시간 기반 트리거 간격 지정<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#시간-기반-트리거-간격-지정\"></a></h3>\n<ul>\n<li>Structured Streaming의 시간 기반 trigger는 기본적으로 500ms의 고정 간격 micro-batches</li>\n<li><code>processTime</code> 키워드를 사용하여 기간(예: <code>.trigger(processingTime='10 seconds'))</code>을 문자열로 지정</li>\n</ul>\n<h2 id=\"증분-일괄-처리-구성\">증분 일괄 처리 구성<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#증분-일괄-처리-구성\"></a></h2>\n<ul>\n<li>원본 디렉터리의 모든 새 데이터를 단일 micro-batch로 처리하려면 <code>.trigger(once=True)</code> 옵션을 사용</li>\n<li>스트리밍 입력 크기가 큰 경우 <code>.trigger(availableNow=True)</code> 옵션 사용</li>\n</ul>\n<h2 id=\"reference\">Reference<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#reference\"></a></h2>\n<ul>\n<li><a href=\"https://learn.microsoft.com/en-us/azure/databricks/getting-started/streaming\">https://learn.microsoft.com/en-us/azure/databricks/getting-started/streaming</a></li>\n<li><a href=\"https://learn.microsoft.com/en-us/azure/databricks/structured-streaming/triggers\">https://learn.microsoft.com/en-us/azure/databricks/structured-streaming/triggers</a></li>\n</ul>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/pks-publish/notes/0wwj1byxg3uhkh6el05q2o9\">Data+AI Summit 2022 키노트 주요 어나운스먼트 요약</a></li>\n<li><a href=\"/pks-publish/notes/f5ta5qp6kvcp8x23oxfjwi2\">Delta Lake</a></li>\n<li><a href=\"/pks-publish/notes/hvd8818q6qo5xxfok5lhye7\">Delta Live Tables</a></li>\n</ul>","noteIndex":{"id":"rfaecb1r4pxpahsrighqpfi","title":"Dev","desc":"","updated":1666489926104,"created":1666489926104,"custom":{"nav_order":0,"permalink":"/"},"fname":"dev","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"5f3d9b993bc1c60c0e10119b00a45c49","links":[],"anchors":{},"children":["vmcgt1bw13lwsobet50r3vl","pj0dbesw2qm5j1tub9f34pg","e40hlh2wukm75vo4t8r9c7p","7xwnx64er01irhu8wg1q5zm","4buyekecqhzdg87aqxmh1rz","n1xmefdyaaztqb8wmsmqtjj","d8p9jq81rc0pfbbuzz7prah","yq2839iijurmzkrwkqwo9ps","51sfhirev9l2r8bef9utfb9","xuw6kyksesfaatsmt3gctyi","njc2zpmxz8izls7ogwdj20h","d3ma1d2r59fhejrl6bn9g0e","tgd9pt1fu1j4ejm4g09vlx4","5jlkrg4hx6dpy5tr55grkh6","ockg1gb78gpshwty5zjmvue","owsm2ti22dslhpk9oduhhku","52x2zgp7jpygai1h0jpv0t8","2d5oqog2rsdfdogne54tq9t"],"parent":null,"data":{},"body":""},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["dev","about"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Golbang Hacker","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","assetsPrefix":"/pks-publish","siteUrl":"https://b2sdev.github.io","theme":"dark","siteFaviconPath":"favicon.ico","siteIndex":"dev"}}},"__N_SSG":true}