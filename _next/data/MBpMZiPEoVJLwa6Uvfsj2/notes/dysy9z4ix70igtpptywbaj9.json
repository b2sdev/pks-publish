{"pageProps":{"note":{"id":"dysy9z4ix70igtpptywbaj9","title":"SQLAlchemy","desc":"","updated":1666970571227,"created":1536878940227,"custom":{},"fname":"dev.lang.python.sqlalchemy","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"71ee16c9c511f5385399442d0821716d","links":[],"anchors":{"sqlalchemy-orm-object-relational-mapper":{"type":"header","text":"SQLAlchemy ORM (Object Relational Mapper)","value":"sqlalchemy-orm-object-relational-mapper","line":8,"column":0,"depth":2},"what":{"type":"header","text":"What","value":"what","line":10,"column":0,"depth":3},"how":{"type":"header","text":"How","value":"how","line":13,"column":0,"depth":3},"note":{"type":"header","text":"Note","value":"note","line":17,"column":0,"depth":3},"sqlalchemy-사용법":{"type":"header","text":"SQLAlchemy 사용법","value":"sqlalchemy-사용법","line":20,"column":0,"depth":2},"sqlalchemy-설치":{"type":"header","text":"SQLAlchemy 설치","value":"sqlalchemy-설치","line":22,"column":0,"depth":3},"데이터베이스에-접속":{"type":"header","text":"데이터베이스에 접속","value":"데이터베이스에-접속","line":27,"column":0,"depth":3},"base-클래스-만들기":{"type":"header","text":"Base 클래스 만들기","value":"base-클래스-만들기","line":39,"column":0,"depth":3},"model-만들기":{"type":"header","text":"Model 만들기","value":"model-만들기","line":46,"column":0,"depth":3},"데이터베이스-테이블-생성":{"type":"header","text":"데이터베이스 테이블 생성","value":"데이터베이스-테이블-생성","line":64,"column":0,"depth":3},"references":{"type":"header","text":"References","value":"references","line":83,"column":0,"depth":2},"note-1":{"type":"header","text":"Note","value":"note-1","line":87,"column":0,"depth":2}},"children":[],"parent":"cs0ywedlr9hdyf3a6r08h8y","data":{}},"body":"<h1 id=\"sqlalchemy\">SQLAlchemy<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sqlalchemy\"></a></h1>\n<h2 id=\"sqlalchemy-orm-object-relational-mapper\">SQLAlchemy ORM (Object Relational Mapper)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sqlalchemy-orm-object-relational-mapper\"></a></h2>\n<h3 id=\"what\">What<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what\"></a></h3>\n<ul>\n<li>파이썬에서 데이터베이스를 쉽고 효율적으로 다룰 수 있는 환경을 제공하는 도구</li>\n</ul>\n<h3 id=\"how\">How<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how\"></a></h3>\n<ul>\n<li>파이썬과 데이터베이스를 연결해 상위 레벨에서 SQL을 사용할 수 있게 해줌\n<ul>\n<li>파이썬의 클래스와 클래스의 객체를 관계형 데이터베이스의 테이블과 그 테이블의 레코드로 연관지음</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"note\">Note<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#note\"></a></h3>\n<ul>\n<li>만약 저수준의 SQL로 데이터베이와 직접 상호 작용해야하면 SQLAlchemy Core의 SQL Expression Language를 사용할 수 있음</li>\n</ul>\n<h2 id=\"sqlalchemy-사용법\">SQLAlchemy 사용법<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sqlalchemy-사용법\"></a></h2>\n<h3 id=\"sqlalchemy-설치\">SQLAlchemy 설치<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sqlalchemy-설치\"></a></h3>\n<pre class=\"language-shell\"><code class=\"language-shell\">pip <span class=\"token function\">install</span> SQLAlchemy\n</code></pre>\n<h3 id=\"데이터베이스에-접속\">데이터베이스에 접속<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#데이터베이스에-접속\"></a></h3>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> sqlalchemy<span class=\"token punctuation\">.</span>orm <span class=\"token keyword\">import</span> scoped_session<span class=\"token punctuation\">,</span> sessionmaker<span class=\"token punctuation\">,</span> relationship<span class=\"token punctuation\">,</span> backref\n\n<span class=\"token comment\"># 데이터베이스에 접속하기 위해 데이터베이스 엔진을 추상화한 Engine 객체를 얻는다</span>\nengine <span class=\"token operator\">=</span> sa<span class=\"token punctuation\">.</span>create_engine<span class=\"token punctuation\">(</span><span class=\"token string\">'mysql+pymysql://root:password@34.239.103.110/testdb'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#'sqlite:///site.db'</span>\n\n<span class=\"token comment\"># 연결된 데이터베이스를 다루기 위한 세션 객체를 얻는다.</span>\n<span class=\"token comment\"># 이 세션을 이용해 데이터베이스 쿼리, 커넥션, 트랜잭션 등 데이터베이스와 관련된 모든 작업을 처리한다. bind 인자에 연결할 데이터베이스 엔진을 설정한다.</span>\nsession <span class=\"token operator\">=</span> scoped_session<span class=\"token punctuation\">(</span>sessionmaker<span class=\"token punctuation\">(</span>bind<span class=\"token operator\">=</span>engine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"base-클래스-만들기\">Base 클래스 만들기<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#base-클래스-만들기\"></a></h3>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> sqlalchemy<span class=\"token punctuation\">.</span>ext<span class=\"token punctuation\">.</span>declarative <span class=\"token keyword\">import</span> declarative_base\n\nBase <span class=\"token operator\">=</span> declarative_base<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"model-만들기\">Model 만들기<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#model-만들기\"></a></h3>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sqlalchemy <span class=\"token keyword\">as</span> sa\n\n<span class=\"token comment\"># users 테이블을 아래와 같이 모델링한다</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>Base<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># User 클래스와 매핑될 물리적인 데이터베이스 테이블명</span>\n    __tablename__ <span class=\"token operator\">=</span> <span class=\"token string\">'user'</span>\n    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>sa<span class=\"token punctuation\">.</span>Integer<span class=\"token punctuation\">,</span> primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    username <span class=\"token operator\">=</span> sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>sa<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    email <span class=\"token operator\">=</span> sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>sa<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    password <span class=\"token operator\">=</span> sa<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>sa<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> nullable<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 객체에 어떤 값이 들어있는지 출력 (디버깅, 로깅 용)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"User('</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>user_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">', '</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">}</span></span><span class=\"token string\">')\"</span></span>\n</code></pre>\n<h3 id=\"데이터베이스-테이블-생성\">데이터베이스 테이블 생성<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#데이터베이스-테이블-생성\"></a></h3>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 앞서 초기화한대로 데이터베이스 테이블을 생성한다.</span>\nBase<span class=\"token punctuation\">.</span>metadata<span class=\"token punctuation\">.</span>create_all<span class=\"token punctuation\">(</span>engine<span class=\"token punctuation\">)</span>\n</code></pre>\n<p>SQLAlechemy에서 자동으로 아래와 같은 데이터베이스 테이블 스키마를 새성하는 SQL 문을 실행한 것처럼 테이블을 만들어준다.</p>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> users<span class=\"token punctuation\">(</span>\nid <span class=\"token keyword\">INTEGER</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\nusername <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nemail <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\npassword <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">55</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">PRIMARY</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">UNIQUE</span> <span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"references\">References<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#references\"></a></h2>\n<ul>\n<li>주성식, 홍성민, 파이썬 웹 프로그래밍, 위키북스</li>\n<li><a href=\"https://docs.sqlalchemy.org/en/latest/orm/examples.html\">https://docs.sqlalchemy.org/en/latest/orm/examples.html</a></li>\n</ul>\n<h2 id=\"note-1\">Note<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#note-1\"></a></h2>\n<p>아래 자료도 추가 확인할 것</p>\n<ul>\n<li><a href=\"https://www.sqlalchemy.org/\">https://www.sqlalchemy.org/</a></li>\n<li><a href=\"http://flask-sqlalchemy.pocoo.org/2.3/\">http://flask-sqlalchemy.pocoo.org/2.3/</a></li>\n</ul>","noteIndex":{"id":"rfaecb1r4pxpahsrighqpfi","title":"Dev","desc":"","updated":1666489926104,"created":1666489926104,"custom":{"nav_order":0,"permalink":"/"},"fname":"dev","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"5f3d9b993bc1c60c0e10119b00a45c49","links":[],"anchors":{},"children":["vmcgt1bw13lwsobet50r3vl","pj0dbesw2qm5j1tub9f34pg","e40hlh2wukm75vo4t8r9c7p","7xwnx64er01irhu8wg1q5zm","4buyekecqhzdg87aqxmh1rz","n1xmefdyaaztqb8wmsmqtjj","d8p9jq81rc0pfbbuzz7prah","yq2839iijurmzkrwkqwo9ps","51sfhirev9l2r8bef9utfb9","xuw6kyksesfaatsmt3gctyi","njc2zpmxz8izls7ogwdj20h","d3ma1d2r59fhejrl6bn9g0e","tgd9pt1fu1j4ejm4g09vlx4","5jlkrg4hx6dpy5tr55grkh6","ockg1gb78gpshwty5zjmvue","owsm2ti22dslhpk9oduhhku","52x2zgp7jpygai1h0jpv0t8","2d5oqog2rsdfdogne54tq9t"],"parent":null,"data":{},"body":""},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["dev","about"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Golbang Hacker","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","assetsPrefix":"/pks-publish","siteUrl":"https://b2sdev.github.io","theme":"dark","siteFaviconPath":"favicon.ico","siteIndex":"dev"}}},"__N_SSG":true}