{"pageProps":{"note":{"id":"edz7dtpw37iqg7uejfq1x7g","title":"Problem Solving Tips","desc":"","updated":1667826750626,"created":1667826750626,"custom":{},"fname":"dev.lang.python.ps-tips","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"faeb824d6711527d68148b9171cc6714","links":[],"anchors":{"입력-처리":{"type":"header","text":"입력 처리","value":"입력-처리","line":8,"column":0,"depth":2},"리스트-초기화":{"type":"header","text":"리스트 초기화","value":"리스트-초기화","line":24,"column":0,"depth":2},"최댓값최솟값":{"type":"header","text":"최댓값/최솟값","value":"최댓값최솟값","line":29,"column":0,"depth":2},"문자":{"type":"header","text":"문자","value":"문자","line":38,"column":0,"depth":2},"문자열":{"type":"header","text":"문자열","value":"문자열","line":49,"column":0,"depth":2},"matrix":{"type":"header","text":"Matrix","value":"matrix","line":55,"column":0,"depth":2},"정규식":{"type":"header","text":"정규식","value":"정규식","line":60,"column":0,"depth":2},"counter":{"type":"header","text":"Counter","value":"counter","line":68,"column":0,"depth":2},"list--문자열":{"type":"header","text":"List ~ 문자열","value":"list--문자열","line":78,"column":0,"depth":2},"deque":{"type":"header","text":"Deque","value":"deque","line":98,"column":0,"depth":2},"two-pointers":{"type":"header","text":"Two pointers","value":"two-pointers","line":106,"column":0,"depth":2},"정렬":{"type":"header","text":"정렬","value":"정렬","line":133,"column":0,"depth":2},"dict":{"type":"header","text":"Dict","value":"dict","line":141,"column":0,"depth":2},"예외-처리":{"type":"header","text":"예외 처리","value":"예외-처리","line":146,"column":0,"depth":2},"stack":{"type":"header","text":"Stack","value":"stack","line":151,"column":0,"depth":2},"queue":{"type":"header","text":"Queue","value":"queue","line":163,"column":0,"depth":2},"우선순위-큐":{"type":"header","text":"우선순위 큐","value":"우선순위-큐","line":172,"column":0,"depth":2},"해시-테이블":{"type":"header","text":"해시 테이블","value":"해시-테이블","line":196,"column":0,"depth":2},"set":{"type":"header","text":"Set","value":"set","line":208,"column":0,"depth":2},"sliding-window":{"type":"header","text":"Sliding Window","value":"sliding-window","line":215,"column":0,"depth":2},"백트래킹":{"type":"header","text":"백트래킹","value":"백트래킹","line":221,"column":0,"depth":2},"그래프":{"type":"header","text":"그래프","value":"그래프","line":242,"column":0,"depth":2},"최단-거리":{"type":"header","text":"최단 거리","value":"최단-거리","line":249,"column":0,"depth":2},"트리":{"type":"header","text":"트리","value":"트리","line":251,"column":0,"depth":2},"분할-정복":{"type":"header","text":"분할 정복","value":"분할-정복","line":259,"column":0,"depth":2},"set-1":{"type":"header","text":"Set","value":"set-1","line":264,"column":0,"depth":2}},"children":[],"parent":"cs0ywedlr9hdyf3a6r08h8y","data":{}},"body":"<h1 id=\"problem-solving-tips\">Problem Solving Tips<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#problem-solving-tips\"></a></h1>\n<h2 id=\"입력-처리\">입력 처리<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#입력-처리\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 다음을 고할 것</span>\n<span class=\"token comment\"># 숫자인지, 문자인지</span>\n<span class=\"token comment\"># 음수</span>\n<span class=\"token comment\"># 정수 여부</span>\n<span class=\"token comment\"># 정렬 여부</span>\n<span class=\"token comment\"># 입력 값이 없는 경우</span>\n<span class=\"token comment\"># 입력 리스트 내부를 직접 조작해도 되는지 ~ immutable</span>\n<span class=\"token comment\"># 대소문자 구분</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> strs<span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n<span class=\"token keyword\">if</span> s <span class=\"token operator\">==</span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h2 id=\"리스트-초기화\">리스트 초기화<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#리스트-초기화\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"최댓값최솟값\">최댓값/최솟값<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#최댓값최솟값\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">mx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>sys<span class=\"token punctuation\">.</span>maxsize\nmn <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>maxsize\n\nmx <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-inf'</span><span class=\"token punctuation\">)</span>\nmn <span class=\"token operator\">=</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">'inf'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"문자\">문자<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#문자\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">char<span class=\"token punctuation\">.</span>isalnum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nchar<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nchar<span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nchar<span class=\"token punctuation\">.</span>isnumeric<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># isdecimal() ⊆ isdigit() ⊆ isnumeric()</span>\n<span class=\"token comment\"># https://stackoverflow.com/questions/44891070/whats-the-difference-between-str-isdigit-isnumeric-and-isdecimal-in-python</span>\n</code></pre>\n<h2 id=\"문자열\">문자열<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#문자열\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">strs<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nstrs<span class=\"token punctuation\">.</span>reverse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">~</span> strs<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> strs<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h2 id=\"matrix\">Matrix<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#matrix\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span>target <span class=\"token keyword\">in</span> row <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> matrix<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"정규식\">정규식<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#정규식\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n\ns <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">'[^a-z0-9]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\nword <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">r'[^\\w]'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> paragraph<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"counter\">Counter<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#counter\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> collections\n\ncounts <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>Counter<span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">return</span> counts<span class=\"token punctuation\">.</span>most_common<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n또는 <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>counts<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"list--문자열\">List ~ 문자열<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#list--문자열\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">strs<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># O(n)</span>\nstrs<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nlst<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">)</span>\n\nresult <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> e <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nresult <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nnext_elements <span class=\"token operator\">=</span> elements<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 값을 참조가 아닌 복사</span>\nnext_elements<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span>\n\npath <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span>candidates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\nnew_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>copy\n</code></pre>\n<h2 id=\"deque\">Deque<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#deque\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> collections\n\nstrs<span class=\"token punctuation\">:</span> Deque <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nstrs<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># O(1)</span>\n</code></pre>\n<h2 id=\"two-pointers\">Two pointers<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#two-pointers\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">left<span class=\"token punctuation\">,</span> right <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">while</span> left <span class=\"token operator\">&#x3C;</span> right<span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># do something</span>\n  s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span>\n  left <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n  right <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n\n<span class=\"token comment\"># 06 longest palindromic substring</span>\n<span class=\"token comment\"># 08 trapping rain water</span>\n<span class=\"token comment\"># 09 3sum</span>\n<span class=\"token comment\"># 30 longest-substring-without-repeating-characters</span>\n<span class=\"token comment\"># 63 sort-colors</span>\n<span class=\"token comment\"># 67 intersection-of-two-arrays</span>\n<span class=\"token comment\"># 76 minimum-window-substring</span>\n\n<span class=\"token comment\"># Runner</span>\nslow <span class=\"token operator\">=</span> fast <span class=\"token operator\">=</span> head\n<span class=\"token keyword\">while</span> fast <span class=\"token keyword\">and</span> fast<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">:</span>\n  fast <span class=\"token operator\">=</span> fast<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n  slow <span class=\"token operator\">=</span> slow<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n\n<span class=\"token comment\"># 13 palindrome-linked-list</span>\n<span class=\"token comment\"># 58 sort-list</span>\n</code></pre>\n<h2 id=\"정렬\">정렬<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#정렬\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">s<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>key<span class=\"token operator\">=</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"dict\">Dict<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dict\"></a></h2>\n<p>collections.defaultdict(int)\ncollections.defaultdict(list)</p>\n<h2 id=\"예외-처리\">예외 처리<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#예외-처리\"></a></h2>\n<ul>\n<li>stack에서 pop 전에 stack이 비었는지 확인\nif not stack or table[char] != stack.pop(): return False</li>\n</ul>\n<h2 id=\"stack\">Stack<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#stack\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ntop <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\nstack <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>root<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> stack<span class=\"token punctuation\">:</span>\n  node <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> node<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<h2 id=\"queue\">Queue<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#queue\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">queue <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>root<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> queue<span class=\"token punctuation\">:</span>\n  node <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> node<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n</code></pre>\n<h2 id=\"우선순위-큐\">우선순위 큐<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#우선순위-큐\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> heapq\n\nheap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> lst <span class=\"token keyword\">in</span> lists<span class=\"token punctuation\">:</span>\n  heapq<span class=\"token punctuation\">.</span>heappush<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">,</span> lst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">while</span> heap<span class=\"token punctuation\">:</span>\n  elem <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>heap<span class=\"token punctuation\">)</span>\n\nfreqs <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>Counter<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\nfreqs_heap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> f <span class=\"token keyword\">in</span> freqs<span class=\"token punctuation\">:</span>\n  heapq<span class=\"token punctuation\">.</span>heappush<span class=\"token punctuation\">(</span>freqs_heap<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>freqs<span class=\"token punctuation\">[</span>f<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ntopk <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  topk<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span>freqs_heap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>collections<span class=\"token punctuation\">.</span>Counter<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>most_common<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<h2 id=\"해시-테이블\">해시 테이블<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#해시-테이블\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">freqs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nfreqs<span class=\"token punctuation\">[</span>char<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> char <span class=\"token keyword\">in</span> freqs<span class=\"token punctuation\">:</span>\n  count <span class=\"token operator\">+=</span> freqs<span class=\"token punctuation\">[</span>char<span class=\"token punctuation\">]</span>\n\nfreqs <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n\nfreqs <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>Counter<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"set\">Set<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#set\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">s <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> sth <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span>\n</code></pre>\n<h2 id=\"sliding-window\">Sliding Window<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sliding-window\"></a></h2>\n<p>06 longest-palindromic-substring\n30 longest-substring-without-repeating-characters</p>\n<h2 id=\"백트래킹\">백트래킹<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#백트래킹\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">results <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># 끝까지 탐색하면 백트래킹</span>\n  <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    results<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n\n  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>digits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n      dfs<span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> path <span class=\"token operator\">+</span> j<span class=\"token punctuation\">)</span>\n    \n<span class=\"token comment\"># 33 letter-combination-of-a-phone-number</span>\n<span class=\"token comment\"># 34 permutations</span>\n<span class=\"token comment\"># 35 combinations</span>\n<span class=\"token comment\"># 44 longest-univalue-path</span>\n<span class=\"token comment\"># 45 invert-binary-tree</span>\n<span class=\"token comment\"># 46 merge-two-binary-trees</span>\n</code></pre>\n<h2 id=\"그래프\">그래프<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#그래프\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">graph <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> a<span class=\"token punctuation\">,</span> b <span class=\"token keyword\">in</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>tickets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  graph<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"최단-거리\">최단 거리<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#최단-거리\"></a></h2>\n<h2 id=\"트리\">트리<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#트리\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">mid <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\nnode <span class=\"token operator\">=</span> TreeNode<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nleft <span class=\"token operator\">=</span> bst<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nright <span class=\"token operator\">=</span> bst<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"분할-정복\">분할 정복<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#분할-정복\"></a></h2>\n<p>50 convert-sorted-array-to-binary-search-tree\n54 construct-binary-tree\n58 sort-list</p>\n<h2 id=\"set-1\">Set<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#set-1\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">result <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nresult<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n</code></pre>","noteIndex":{"id":"rfaecb1r4pxpahsrighqpfi","title":"Dev","desc":"","updated":1666489926104,"created":1666489926104,"custom":{"nav_order":0,"permalink":"/"},"fname":"dev","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"5f3d9b993bc1c60c0e10119b00a45c49","links":[],"anchors":{},"children":["vmcgt1bw13lwsobet50r3vl","pj0dbesw2qm5j1tub9f34pg","e40hlh2wukm75vo4t8r9c7p","7xwnx64er01irhu8wg1q5zm","4buyekecqhzdg87aqxmh1rz","n1xmefdyaaztqb8wmsmqtjj","d8p9jq81rc0pfbbuzz7prah","yq2839iijurmzkrwkqwo9ps","51sfhirev9l2r8bef9utfb9","xuw6kyksesfaatsmt3gctyi","njc2zpmxz8izls7ogwdj20h","d3ma1d2r59fhejrl6bn9g0e","tgd9pt1fu1j4ejm4g09vlx4","5jlkrg4hx6dpy5tr55grkh6","ockg1gb78gpshwty5zjmvue","owsm2ti22dslhpk9oduhhku","52x2zgp7jpygai1h0jpv0t8","2d5oqog2rsdfdogne54tq9t"],"parent":null,"data":{},"body":""},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["dev","about"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Golbang Hacker","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","assetsPrefix":"/pks-publish","siteUrl":"https://b2sdev.github.io","theme":"dark","siteFaviconPath":"favicon.ico","siteIndex":"dev"}}},"__N_SSG":true}