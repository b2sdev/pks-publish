{"pageProps":{"note":{"id":"hvd8818q6qo5xxfok5lhye7","title":"Delta Live Tables","desc":"","updated":1670650335155,"created":1669724994686,"custom":{},"fname":"dev.data+ai.databricks.delta_live_tables","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"21c18d696100dac868a464acfaafec38","links":[{"type":"wiki","from":{"fname":"dev.data+ai.databricks.delta_live_tables","id":"hvd8818q6qo5xxfok5lhye7","vaultName":"Dendron"},"value":"dev.data+ai.databricks.delta_table","position":{"start":{"line":3,"column":47,"offset":55},"end":{"line":3,"column":85,"offset":93},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"dev.data+ai.databricks.delta_table"}},{"type":"wiki","from":{"fname":"dev.data+ai.databricks.delta_live_tables","id":"hvd8818q6qo5xxfok5lhye7","vaultName":"Dendron"},"value":"dev.data+ai.spark.structured_streaming","position":{"start":{"line":3,"column":88,"offset":96},"end":{"line":3,"column":130,"offset":138},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"dev.data+ai.spark.structured_streaming"}},{"type":"wiki","from":{"fname":"dev.data+ai.databricks.delta_live_tables","id":"hvd8818q6qo5xxfok5lhye7","vaultName":"Dendron"},"value":"dev.data+ai.databricks.delta_live_tables.expectations","position":{"start":{"line":7,"column":8,"offset":352},"end":{"line":7,"column":65,"offset":409},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"dev.data+ai.databricks.delta_live_tables.expectations"}},{"type":"wiki","from":{"fname":"dev.data+ai.databricks.delta_live_tables","id":"hvd8818q6qo5xxfok5lhye7","vaultName":"Dendron"},"value":"dev.data+ai.data_ingestion.constraint","position":{"start":{"line":8,"column":57,"offset":490},"end":{"line":8,"column":98,"offset":531},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"dev.data+ai.data_ingestion.constraint"}},{"from":{"fname":"dev.data+ai.databricks.data+ai-summit-2022-keynote-summary","id":"0wwj1byxg3uhkh6el05q2o9","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":21,"column":7,"offset":379},"end":{"line":21,"column":51,"offset":423},"indent":[]},"value":"dev.data+ai.databricks.delta_live_tables"},{"from":{"fname":"dev.data+ai.databricks.delta_live_tables.expectations","id":"jgxvkvj6ety2k8jdh6ia3un","vaultName":"Dendron"},"type":"backlink","position":{"start":{"line":3,"column":1,"offset":9},"end":{"line":3,"column":45,"offset":53},"indent":[]},"value":"dev.data+ai.databricks.delta_live_tables"}],"anchors":{"what":{"type":"header","text":"What","value":"what","line":8,"column":0,"depth":2},"how":{"type":"header","text":"How","value":"how","line":16,"column":0,"depth":2},"data-ingestion":{"type":"header","text":"Data Ingestion","value":"data-ingestion","line":18,"column":0,"depth":3},"delta-live-table-생성":{"type":"header","text":"Delta live table 생성","value":"delta-live-table-생성","line":28,"column":0,"depth":3},"streaming-data-processing":{"type":"header","text":"Streaming data processing","value":"streaming-data-processing","line":35,"column":0,"depth":3},"python":{"type":"header","text":"Python","value":"python","line":37,"column":0,"depth":4},"sql":{"type":"header","text":"SQL","value":"sql","line":61,"column":0,"depth":4},"configure-a-structured-streaming-job":{"type":"header","text":"Configure a Structured Streaming job","value":"configure-a-structured-streaming-job","line":75,"column":0,"depth":3},"from-a-bronze-table-to-a-silver-table":{"type":"header","text":"From a Bronze table to a Silver table","value":"from-a-bronze-table-to-a-silver-table","line":77,"column":0,"depth":4},"to-execute-a-single-micro-batch-to-process-all-of-the-available-data":{"type":"header","text":"To Execute a single micro-batch to process all of the available data","value":"to-execute-a-single-micro-batch-to-process-all-of-the-available-data","line":87,"column":0,"depth":4},"medalion-structures":{"type":"header","text":"Medalion Structures","value":"medalion-structures","line":98,"column":0,"depth":2}},"children":["yafhr4wma720uky7t582yzq","jgxvkvj6ety2k8jdh6ia3un"],"parent":"skeuhenz2vf0ycgfmyy8pl1","data":{}},"body":"<h1 id=\"delta-live-tables\">Delta Live Tables<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#delta-live-tables\"></a></h1>\n<h2 id=\"what\">What<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#what\"></a></h2>\n<ul>\n<li>Automated data pipelines for Delta Lake &#x3C;-- <a href=\"/pks-publish/notes/es7fyakczjuyvb0u7k9g8xg\">Delta Table</a> + <a href=\"/pks-publish/notes/cmfutyhgtl88lr1sike6zta\">Structured Streaming</a></li>\n<li>데이터 처리 파이프라인을 빌드하기 위한 프레임워크</li>\n<li>사용자는 데이터에 대해 수행할 변환을 정의하고, DLT는 작업 오케스트레이션, 클러스터 관리, 모니터링, 데이터 품질 및 오류 처리를 관리</li>\n<li>여러 Spark 작업을 사용하여 데이터 파이프라인을 정의하는 대신 DLT는 각 처리 단계에 대해 사용자가 정의하는 대상 스키마를 기반으로 데이터를 변화하는 방법을 관리</li>\n<li>DLT는 <a href=\"/pks-publish/notes/jgxvkvj6ety2k8jdh6ia3un\">Expectations</a>를 사용하여 데이터 품질을 적용할 수도 있음\n<ul>\n<li>예상 데이터 품질을 정의하고 이러한 기대에 실패한 레코드를 처리하는 방법을 지정할 수 있음 (<a href=\"/pks-publish/notes/vtzfkb3yhrdf403l7lqwan9\">Constraint</a>)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"how\">How<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#how\"></a></h2>\n<h3 id=\"data-ingestion\">Data Ingestion<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#data-ingestion\"></a></h3>\n<ul>\n<li>\n<p>Cloud storage에 있는 data: <code>Auto Loader</code>를 사용하여 데이터가 업로드될 때마다 Delta Live Table이 ingest</p>\n<pre class=\"language-python\"><code class=\"language-python\">spark<span class=\"token punctuation\">.</span>readStream<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cloudFiles'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># enables the use of Auto Loader</span>\n   <span class=\"token punctuation\">.</span>option<span class=\"token punctuation\">(</span><span class=\"token string\">\"cloudFiles.format\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"csv\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">\"path/to/customers\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n</li>\n<li>\n<p><code>Append-only</code> 속성을 가지는 다른 delta table: <code>SQL STREAM()</code> function을 사용하여 ingest</p>\n</li>\n</ul>\n<h3 id=\"delta-live-table-생성\">Delta live table 생성<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#delta-live-table-생성\"></a></h3>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> LIVE <span class=\"token keyword\">TABLE</span> customers\n<span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> cloud_files<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"streaming-data-processing\">Streaming data processing<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#streaming-data-processing\"></a></h3>\n<h4 id=\"python\">Python<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python\"></a></h4>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@dlt<span class=\"token punctuation\">.</span>table</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">streaming_bronze</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token comment\"># Since this is a streaming source, this table is incremental.</span>\n    spark<span class=\"token punctuation\">.</span>readStream<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cloudFiles\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>option<span class=\"token punctuation\">(</span><span class=\"token string\">\"cloudFiles.format\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">\"abfss://path/to/raw/data\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@dlt<span class=\"token punctuation\">.</span>table</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">streaming_silver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># Since we read the bronze table as a stream, this silver table is also</span>\n  <span class=\"token comment\"># updated incrementally.</span>\n  <span class=\"token keyword\">return</span> dlt<span class=\"token punctuation\">.</span>read_stream<span class=\"token punctuation\">(</span><span class=\"token string\">\"streaming_bronze\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token decorator annotation punctuation\">@dlt<span class=\"token punctuation\">.</span>table</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">live_gold</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># This table will be recomputed completely by reading the whole silver table</span>\n  <span class=\"token comment\"># when it is updated.</span>\n  <span class=\"token keyword\">return</span> dlt<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token string\">\"streaming_silver\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>groupBy<span class=\"token punctuation\">(</span><span class=\"token string\">\"user_id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h4 id=\"sql\">SQL<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sql\"></a></h4>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token operator\">OR</span> REFRESH STREAMING LIVE <span class=\"token keyword\">TABLE</span> streaming_bronze\n<span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> cloud_files<span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"abfss://path/to/raw/data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"json\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token operator\">OR</span> REFRESH STREAMING LIVE <span class=\"token keyword\">TABLE</span> streaming_silver\n<span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> STREAM<span class=\"token punctuation\">(</span>LIVE<span class=\"token punctuation\">.</span>streaming_bronze<span class=\"token punctuation\">)</span> <span class=\"token keyword\">WHERE</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token operator\">OR</span> REFRESH LIVE <span class=\"token keyword\">TABLE</span> live_gold\n<span class=\"token keyword\">AS</span> <span class=\"token keyword\">SELECT</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> LIVE<span class=\"token punctuation\">.</span>streaming_silver <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> user_id\n</code></pre>\n<h3 id=\"configure-a-structured-streaming-job\">Configure a Structured Streaming job<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#configure-a-structured-streaming-job\"></a></h3>\n<h4 id=\"from-a-bronze-table-to-a-silver-table\">From a Bronze table to a Silver table<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#from-a-bronze-table-to-a-silver-table\"></a></h4>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>spark<span class=\"token punctuation\">.</span>table<span class=\"token punctuation\">(</span><span class=\"token string\">\"sales\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>withColumn<span class=\"token punctuation\">(</span><span class=\"token string\">\"avg_price\"</span><span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">(</span><span class=\"token string\">\"sales\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> col<span class=\"token punctuation\">(</span><span class=\"token string\">\"units\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>writeStream\n    <span class=\"token punctuation\">.</span>option<span class=\"token punctuation\">(</span><span class=\"token string\">\"checkpointLocation\"</span><span class=\"token punctuation\">,</span> checkpointPath<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>outputMode<span class=\"token punctuation\">(</span>\"append<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>table<span class=\"token punctuation\">(</span><span class=\"token string\">\"cleanedSales\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h4 id=\"to-execute-a-single-micro-batch-to-process-all-of-the-available-data\">To Execute a single micro-batch to process all of the available data<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#to-execute-a-single-micro-batch-to-process-all-of-the-available-data\"></a></h4>\n<pre class=\"language-python\"><code class=\"language-Python\"><span class=\"token punctuation\">(</span>spark<span class=\"token punctuation\">.</span>table<span class=\"token punctuation\">(</span><span class=\"token string\">\"sales\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>withColumn<span class=\"token punctuation\">(</span><span class=\"token string\">\"avg_price\"</span><span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">(</span><span class=\"token string\">\"sales\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> col<span class=\"token punctuation\">(</span><span class=\"token string\">\"units\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>writeStream\n    <span class=\"token punctuation\">.</span>option<span class=\"token punctuation\">(</span><span class=\"token string\">\"checkpointLocation\"</span><span class=\"token punctuation\">,</span> checkpointPath<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">(</span><span class=\"token string\">\"complete\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>trigger<span class=\"token punctuation\">(</span>once<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span>table<span class=\"token punctuation\">(</span><span class=\"token string\">\"new_sales\"</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"medalion-structures\">Medalion Structures<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#medalion-structures\"></a></h2>\n<p><img src=\"https://www.databricks.com/wp-content/uploads/2022/03/delta-lake-medallion-architecture-2.jpeg\"></p>\n<ul>\n<li>\n<p>Data source > Bronze</p>\n<ul>\n<li>A job that ingests raw data from a streaming source into the Lakehouse</li>\n</ul>\n</li>\n<li>\n<p>Bronze > Silver</p>\n<ul>\n<li>A job that enriches data by parsing its timestamps into a human-readable format</li>\n</ul>\n</li>\n<li>\n<p>Silver > Gold</p>\n<ul>\n<li>A job that queries aggregated data to publish key insights into a dashboard</li>\n<li>A job that develops a feature set for a machine learning application</li>\n<li>A job that aggregates cleaned data to create standard summary statistics</li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://www.databricks.com/glossary/medallion-architecture\">https://www.databricks.com/glossary/medallion-architecture</a></p>\n</li>\n</ul>\n<hr>\n<strong>Children</strong>\n<ol>\n<li><a href=\"/pks-publish/notes/yafhr4wma720uky7t582yzq\">Change Data Capture with Delta Live Tables</a></li>\n<li><a href=\"/pks-publish/notes/jgxvkvj6ety2k8jdh6ia3un\">Expectations</a></li>\n</ol>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/pks-publish/notes/0wwj1byxg3uhkh6el05q2o9\">Data+AI Summit 2022 키노트 주요 어나운스먼트 요약</a></li>\n<li><a href=\"/pks-publish/notes/jgxvkvj6ety2k8jdh6ia3un\">Expectations</a></li>\n</ul>","noteIndex":{"id":"rfaecb1r4pxpahsrighqpfi","title":"Dev","desc":"","updated":1666489926104,"created":1666489926104,"custom":{"nav_order":0,"permalink":"/"},"fname":"dev","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"5f3d9b993bc1c60c0e10119b00a45c49","links":[],"anchors":{},"children":["vmcgt1bw13lwsobet50r3vl","pj0dbesw2qm5j1tub9f34pg","e40hlh2wukm75vo4t8r9c7p","7xwnx64er01irhu8wg1q5zm","4buyekecqhzdg87aqxmh1rz","n1xmefdyaaztqb8wmsmqtjj","d8p9jq81rc0pfbbuzz7prah","yq2839iijurmzkrwkqwo9ps","51sfhirev9l2r8bef9utfb9","xuw6kyksesfaatsmt3gctyi","njc2zpmxz8izls7ogwdj20h","d3ma1d2r59fhejrl6bn9g0e","tgd9pt1fu1j4ejm4g09vlx4","5jlkrg4hx6dpy5tr55grkh6","ockg1gb78gpshwty5zjmvue","owsm2ti22dslhpk9oduhhku","52x2zgp7jpygai1h0jpv0t8","2d5oqog2rsdfdogne54tq9t"],"parent":null,"data":{},"body":""},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["dev","about"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Golbang Hacker","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","assetsPrefix":"/pks-publish","siteUrl":"https://b2sdev.github.io","theme":"dark","siteFaviconPath":"favicon.ico","siteIndex":"dev"}}},"__N_SSG":true}