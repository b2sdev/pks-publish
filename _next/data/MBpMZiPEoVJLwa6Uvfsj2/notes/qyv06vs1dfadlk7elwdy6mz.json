{"pageProps":{"note":{"id":"qyv06vs1dfadlk7elwdy6mz","title":"Dijkstra","desc":"","updated":1668216849884,"created":1668216685152,"custom":{},"fname":"dev.dsa.graph.dijkstra","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"598680e393a55ba3ffa4a82bf253f4e2","links":[],"anchors":{"다익스트라-알고리즘의-수도코드":{"type":"header","text":"다익스트라 알고리즘의 수도코드","value":"다익스트라-알고리즘의-수도코드","line":9,"column":0,"depth":2},"다익스트라-알고리즘-구현-python":{"type":"header","text":"다익스트라 알고리즘 구현 (Python)","value":"다익스트라-알고리즘-구현-python","line":36,"column":0,"depth":2},"다익스트라-알고리즘-구현-java":{"type":"header","text":"다익스트라 알고리즘 구현 (Java)","value":"다익스트라-알고리즘-구현-java","line":59,"column":0,"depth":2}},"children":[],"parent":"c0cwsuu2pvu4r5oci5pnzun","data":{}},"body":"<h1 id=\"dijkstra\">Dijkstra<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dijkstra\"></a></h1>\n<h2 id=\"다익스트라-알고리즘의-수도코드\">다익스트라 알고리즘의 수도코드<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#다익스트라-알고리즘의-수도코드\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\">function Dijkstra<span class=\"token punctuation\">(</span>Graph<span class=\"token punctuation\">,</span> soure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tdist<span class=\"token punctuation\">[</span>source<span class=\"token punctuation\">]</span> ← <span class=\"token number\">0</span>\n\t\n\tcreate vertex priority queue Q\n\t\n\t<span class=\"token keyword\">for</span> each vertext v <span class=\"token keyword\">in</span> Graph<span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">if</span> v ≠ source\n\t\t\tdist<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> ← INFINITY\n\t\t\tprev<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> ← UNDEFINED\n\t\t\n\t\tQ<span class=\"token punctuation\">.</span>add_with_priority<span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\n\t<span class=\"token keyword\">while</span> Q <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> empty<span class=\"token punctuation\">:</span>\n\t\tu ← Q<span class=\"token punctuation\">.</span>extract_min<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">for</span> each neighbor v of u<span class=\"token punctuation\">:</span>\n\t\t\talt ← dist<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> length<span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">if</span> alt <span class=\"token operator\">&#x3C;</span> dist<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span>\n\t\t\t\tdist<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> ← alt\n\t\t\t\tprev<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> ← u\n\t\t\t\tQ<span class=\"token punctuation\">.</span>decrease_priority<span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> alt<span class=\"token punctuation\">)</span>\n\t\t\t\t\n\t<span class=\"token keyword\">return</span> dist<span class=\"token punctuation\">,</span> prev\n</code></pre>\n<h2 id=\"다익스트라-알고리즘-구현-python\">다익스트라 알고리즘 구현 (Python)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#다익스트라-알고리즘-구현-python\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 그래프 인접 리스트 구성</span>\ngraph <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> u<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> w <span class=\"token keyword\">in</span> info<span class=\"token punctuation\">:</span>\n\tgraph<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 큐 변수: [(거리, 정점)]</span>\nQ <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># 최단 거리 변수</span>\ndist <span class=\"token operator\">=</span> collections<span class=\"token punctuation\">.</span>defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 우선순위 큐 최솟값 기준으로 정점까지 최단 경로 삽입</span>\n<span class=\"token keyword\">while</span> Q<span class=\"token punctuation\">:</span>\n\td<span class=\"token punctuation\">,</span> u <span class=\"token operator\">=</span> heapq<span class=\"token punctuation\">.</span>heappop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> node <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> dist<span class=\"token punctuation\">:</span>\n\t\tdist<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> d\n\t\t<span class=\"token keyword\">for</span> v<span class=\"token punctuation\">,</span> w <span class=\"token keyword\">in</span> graph<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n\t\t\talt <span class=\"token operator\">=</span> d <span class=\"token operator\">+</span> w\n\t\t\theapq<span class=\"token punctuation\">.</span>heappush<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>alt<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\n</code></pre>\n<h2 id=\"다익스트라-알고리즘-구현-java\">다익스트라 알고리즘 구현 (Java)<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#다익스트라-알고리즘-구현-java\"></a></h2>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">dijkstra</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Graph</span> <span class=\"token class-name\">G</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dist <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">G</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pred <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">G</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&#x3C;</span>dist<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dist<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span>MAX_VALUE<span class=\"token punctuation\">;</span>\n    pred<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> visited <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">boolean</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">G</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  dist<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&#x3C;</span>dist<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> u <span class=\"token operator\">=</span> <span class=\"token function\">extractMin</span><span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">,</span> visited<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    visited<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> n <span class=\"token operator\">=</span> <span class=\"token class-name\">G</span><span class=\"token punctuation\">.</span><span class=\"token function\">neighbors</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&#x3C;</span>n<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> d <span class=\"token operator\">=</span>  dist<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">G</span><span class=\"token punctuation\">.</span><span class=\"token function\">weight</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dist<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> d<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        dist<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> d<span class=\"token punctuation\">;</span>\n        pred<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> u<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> pred<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>","noteIndex":{"id":"rfaecb1r4pxpahsrighqpfi","title":"Dev","desc":"","updated":1666489926104,"created":1666489926104,"custom":{"nav_order":0,"permalink":"/"},"fname":"dev","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"5f3d9b993bc1c60c0e10119b00a45c49","links":[],"anchors":{},"children":["vmcgt1bw13lwsobet50r3vl","pj0dbesw2qm5j1tub9f34pg","e40hlh2wukm75vo4t8r9c7p","7xwnx64er01irhu8wg1q5zm","4buyekecqhzdg87aqxmh1rz","n1xmefdyaaztqb8wmsmqtjj","d8p9jq81rc0pfbbuzz7prah","yq2839iijurmzkrwkqwo9ps","51sfhirev9l2r8bef9utfb9","xuw6kyksesfaatsmt3gctyi","njc2zpmxz8izls7ogwdj20h","d3ma1d2r59fhejrl6bn9g0e","tgd9pt1fu1j4ejm4g09vlx4","5jlkrg4hx6dpy5tr55grkh6","ockg1gb78gpshwty5zjmvue","owsm2ti22dslhpk9oduhhku","52x2zgp7jpygai1h0jpv0t8","2d5oqog2rsdfdogne54tq9t"],"parent":null,"data":{},"body":""},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["dev","about"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Golbang Hacker","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","assetsPrefix":"/pks-publish","siteUrl":"https://b2sdev.github.io","theme":"dark","siteFaviconPath":"favicon.ico","siteIndex":"dev"}}},"__N_SSG":true}