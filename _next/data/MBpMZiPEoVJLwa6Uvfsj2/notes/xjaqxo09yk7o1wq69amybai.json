{"pageProps":{"note":{"id":"xjaqxo09yk7o1wq69amybai","title":"Snippets","desc":"","updated":1668219094536,"created":1668218738780,"custom":{},"fname":"dev.programming.functional.snippets","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"b4583a1f6d263943dffa60d66d10c716","links":[],"anchors":{"dragonsjs":{"type":"header","text":"dragons.js","value":"dragonsjs","line":40,"column":0,"depth":2},"curry":{"type":"header","text":"curry","value":"curry","line":63,"column":0,"depth":2},"일급시민":{"type":"header","text":"일급시민","value":"일급시민","line":68,"column":0,"depth":2},"closure":{"type":"header","text":"closure","value":"closure","line":81,"column":0,"depth":2},"partial-application":{"type":"header","text":"partial application","value":"partial-application","line":136,"column":0,"depth":2},"curry-1":{"type":"header","text":"curry","value":"curry-1","line":160,"column":0,"depth":2},"shoping-cart":{"type":"header","text":"Shoping Cart","value":"shoping-cart","line":170,"column":0,"depth":2},"recursion":{"type":"header","text":"Recursion","value":"recursion","line":192,"column":0,"depth":2},"curryright":{"type":"header","text":"curryRight","value":"curryright","line":222,"column":0,"depth":2},"utils":{"type":"header","text":"Utils","value":"utils","line":231,"column":0,"depth":2},"pure-function":{"type":"header","text":"Pure function","value":"pure-function","line":242,"column":0,"depth":2},"immutable":{"type":"header","text":"Immutable","value":"immutable","line":288,"column":0,"depth":2}},"children":[],"parent":"0dgdfinbj1n0ojsgy5glg9w","data":{}},"body":"<h1 id=\"snippets\">Snippets<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#snippets\"></a></h1>\n<p>Snippet</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"user\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hughfdjackson\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"posts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"why curry?\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"contents\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"...\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"prototypes: the short(est possible) story\"</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"contents\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"...\"</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> curry <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'curry'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// curry는 교재 p34, p129</span>\n<span class=\"token comment\">// get :: String -> Object -> String</span>\n<span class=\"token keyword\">var</span> get <span class=\"token operator\">=</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">curry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">property<span class=\"token punctuation\">,</span> object</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> object<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// map :: Function -> Object -> Object (?)</span>\n<span class=\"token keyword\">var</span> map <span class=\"token operator\">=</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">curry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> value<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">fetchFromServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">parse</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'posts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token function\">fetchFromServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">prop</span><span class=\"token punctuation\">(</span><span class=\"token string\">'posts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">props</span><span class=\"token punctuation\">(</span><span class=\"token string\">'title'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\"\n</code></pre>\n<h2 id=\"dragonsjs\">dragons.js<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#dragonsjs\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\">  \"<span class=\"token keyword\">const</span> <span class=\"token constant\">R</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ramda'</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">let</span> dragons <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'fluffykins'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span> <span class=\"token string\">'lightning'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'noomi'</span><span class=\"token punctuation\">,</span>      <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span> <span class=\"token string\">'lightning'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'karo'</span><span class=\"token punctuation\">,</span>       <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span> <span class=\"token string\">'fire'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'doomer'</span><span class=\"token punctuation\">,</span>     <span class=\"token literal-property property\">element</span><span class=\"token operator\">:</span> <span class=\"token string\">'timewarp'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span>\n  \n  <span class=\"token comment\">// let hasElement = (element, obj) => obj.element === element</span>\n  <span class=\"token comment\">// let lightDragons = dragons.filter(x => hasElement('lightning', x))</span>\n  \n  <span class=\"token comment\">// let hasElement = R.curry((element, obj) => obj.element === element)</span>\n  <span class=\"token comment\">// let lightDragons = dragons.filter(hasElement('lightning'))</span>\n  \n  <span class=\"token keyword\">let</span> hasElement <span class=\"token operator\">=</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">propEq</span><span class=\"token punctuation\">(</span><span class=\"token string\">'element'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lightning'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> lightDragons <span class=\"token operator\">=</span> <span class=\"token constant\">R</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">filter</span><span class=\"token punctuation\">(</span>hasElement<span class=\"token punctuation\">,</span> dragons<span class=\"token punctuation\">)</span>\n  \n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>lightDragons<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"curry\">curry<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#curry\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function-variable function\">getOnClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">index</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> message <span class=\"token operator\">=</span> buttons<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span>\n</code></pre>\n<h2 id=\"일급시민\">일급시민<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#일급시민\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">multiply</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token keyword control-flow\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">const</span> addAlias <span class=\"token operator\">=</span> add<span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> evens <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span> <span class=\"token arrow operator\">=></span> n <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"closure\">closure<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#closure\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token arrow operator\">=></span> <span class=\"token parameter\">y</span> <span class=\"token arrow operator\">=></span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \t\t<span class=\"token keyword control-flow\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  \t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token comment\">// ----</span>\n  \n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createAdder</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">y</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> add3 <span class=\"token operator\">=</span> <span class=\"token function\">createAdder</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">add3</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">add3</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// closure는 이렇게 RECALL 가능</span>\n  \n  <span class=\"token comment\">// ----</span>\n  \n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">request</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token keyword control-flow\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span><span class=\"token property-access\">url</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n  \t\t<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> usersPromise <span class=\"token operator\">=</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  \t<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/users'</span><span class=\"token punctuation\">,</span>\n  \t<span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'X-Custom'</span><span class=\"token operator\">:</span> <span class=\"token string\">'mykey'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> tasksPromise <span class=\"token operator\">=</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  \t<span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/tasks'</span><span class=\"token punctuation\">,</span>\n  \t<span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'X-Custom'</span><span class=\"token operator\">:</span> <span class=\"token string\">'mykey'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token operator\">=</span><span class=\"token arrow operator\">=></span>\n  \n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createRequester</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">otherOptions</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  \t\t<span class=\"token keyword control-flow\">return</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">,</span> otherOptions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> customRequest <span class=\"token operator\">=</span> <span class=\"token function\">createRequester</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  \t<span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'X-Custom'</span><span class=\"token operator\">:</span> <span class=\"token string\">'mykey'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> usersPromise <span class=\"token operator\">=</span> <span class=\"token function\">customRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/users'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> tasksPromise <span class=\"token operator\">=</span> <span class=\"token function\">customRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/tasks'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"partial-application\">partial application<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#partial-application\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> add3 <span class=\"token operator\">=</span> <span class=\"token function\">partial</span><span class=\"token punctuation\">(</span>add<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">add3</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  \n  \n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">request</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">defaults<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  \toptions <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> defaults<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  \t<span class=\"token keyword control-flow\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span><span class=\"token property-access\">url</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n  \t\t<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> customRequest <span class=\"token operator\">=</span> <span class=\"token function\">partial</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'X-Custom'</span><span class=\"token operator\">:</span> <span class=\"token string\">'mykey'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> usersPromise <span class=\"token operator\">=</span> <span class=\"token function\">customRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/users'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> tasksPromise <span class=\"token operator\">=</span> <span class=\"token function\">customRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/tasks'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"curry-1\">curry<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#curry-1\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">request</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">defaults</span> <span class=\"token arrow operator\">=></span> <span class=\"token parameter\">options</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  \toptions <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> defaults<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  \t<span class=\"token keyword control-flow\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span><span class=\"token property-access\">url</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span>\n  \t\t<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token arrow operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"shoping-cart\">Shoping Cart<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#shoping-cart\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">map</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">fn</span> <span class=\"token arrow operator\">=></span> <span class=\"token parameter\">arrray</span> <span class=\"token arrow operator\">=></span> array<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span>fn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">multiply</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">x</span> <span class=\"token arrow operator\">=></span> <span class=\"token parameter\">y</span> <span class=\"token arrow operator\">=></span> x <span class=\"token operator\">*</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">pluck</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">key</span> <span class=\"token arrow operator\">=></span> <span class=\"token parameter\">object</span> <span class=\"token arrow operator\">=></span> object<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> discount <span class=\"token operator\">=</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.98</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> tax <span class=\"token operator\">=</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0925</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> customRequest <span class=\"token operator\">=</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  \t<span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">'X-Custom'</span><span class=\"token operator\">:</span> <span class=\"token string\">'mykey'</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">customRequest</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/cart/items'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  \t<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token function\">pluck</span><span class=\"token punctuation\">(</span><span class=\"token string\">'price'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  \t<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>discount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  \t<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>tax<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">customRequest</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'cart/items'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  \t<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token function\">compose</span><span class=\"token punctuation\">(</span>tax<span class=\"token punctuation\">,</span> discount<span class=\"token punctuation\">,</span> <span class=\"token function\">pluck</span><span class=\"token punctuation\">(</span><span class=\"token string\">'price'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"recursion\">Recursion<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#recursion\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">factorial</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \t\t<span class=\"token keyword control-flow\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  \t<span class=\"token punctuation\">}</span>\n  \t\n  \t<span class=\"token keyword control-flow\">return</span> n <span class=\"token operator\">*</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token constant\">OPTIMIZABLE</span>\n  \n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">factorial</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">,</span> accum <span class=\"token operator\">=</span> <span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \t\t<span class=\"token keyword control-flow\">return</span> accum<span class=\"token punctuation\">;</span>\n  \t<span class=\"token punctuation\">}</span>\n  \n  \t<span class=\"token keyword control-flow\">return</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">*</span> accum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token function\">factorial</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n  <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"curryright\">curryRight<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#curryright\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token function-variable function\">greaterThanOrEqual</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> a <span class=\"token operator\">>=</span> b\n  <span class=\"token keyword\">const</span> greaterThanOrEqualTo <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">curryRight</span><span class=\"token punctuation\">(</span>greaterThanOrEqual<span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">let</span> thirtyDaysAgo <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">86400000</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> within30Days <span class=\"token operator\">=</span> <span class=\"token function\">greaterThanOrEqualTo</span><span class=\"token punctuation\">(</span>thirtyDaysAgo<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"utils\">Utils<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#utils\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getTime</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">dateString</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>dateString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  \n  <span class=\"token function-variable function\">greaterThanOrEqual</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> a <span class=\"token operator\">>=</span> b\n  <span class=\"token keyword\">const</span> greaterThanOrEqualTo <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">curryRight</span><span class=\"token punctuation\">(</span>greaterThanOrEqual<span class=\"token punctuation\">)</span>\n  \n  <span class=\"token keyword\">let</span> thirtyDaysAgo <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">86400000</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> within30Days <span class=\"token operator\">=</span> <span class=\"token function\">greaterThanOrEqualTo</span><span class=\"token punctuation\">(</span>thirtyDaysAgo<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"pure-function\">Pure function<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#pure-function\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token operator\">&#x3C;</span>참조 투명성<span class=\"token operator\">></span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">add</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token operator\">&#x3C;</span><span class=\"token constant\">IMPURE</span><span class=\"token operator\">></span>\n  <span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Jeremy'</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> name<span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">setName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">newName</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  \tname <span class=\"token operator\">=</span> newName<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">printUpperName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token comment\">//----</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">doubleNumbers</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">numbers</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token keyword\">const</span> doubled <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  \t<span class=\"token keyword\">const</span> l <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span><span class=\"token punctuation\">;</span>\n  \n  \t<span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> l<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \t\tdoubled<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \t<span class=\"token punctuation\">)</span>\n  \n  \t<span class=\"token keyword control-flow\">return</span> doubled<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">doubledNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 4, 6]</span>\n  \n  <span class=\"token comment\">// ----</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">doubleNumbers</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">numbers</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token keyword control-flow\">return</span> numbers<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span> <span class=\"token arrow operator\">=></span> n <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">doubleNumbers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [2, 4, 6]</span>\n</code></pre>\n<h2 id=\"immutable\">Immutable<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#immutable\"></a></h2>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token operator\">&#x3C;</span><span class=\"token constant\">MUTABLE</span><span class=\"token operator\">></span>\n  \n  <span class=\"token keyword\">const</span> hobbies <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  \t<span class=\"token string\">'programming'</span><span class=\"token punctuation\">,</span>\n  \t<span class=\"token string\">'reading'</span><span class=\"token punctuation\">,</span>\n  \t<span class=\"token string\">'music'</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> firstTwo <span class=\"token operator\">=</span> hobbies<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>firstTwo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['programming', 'reading']</span>\n  \n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>hobbies<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['music']</span>\n  \n  <span class=\"token operator\">=</span><span class=\"token arrow operator\">=></span>\n  \n  <span class=\"token keyword\">const</span> <span class=\"token keyword\">const</span> hobbies <span class=\"token operator\">=</span> <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">freeze</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  \t<span class=\"token string\">'programming'</span><span class=\"token punctuation\">,</span>\n  \t<span class=\"token string\">'reading'</span><span class=\"token punctuation\">,</span>\n  \t<span class=\"token string\">'music'</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> firstTwo <span class=\"token operator\">=</span> hobbies<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError</span>\n  \n  <span class=\"token comment\">// ----</span>\n  \n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">Point</span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">x</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n  \t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">y</span> <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n  \t<span class=\"token punctuation\">}</span>\n  \t\n  \t<span class=\"token function\">moveBy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dx<span class=\"token punctuation\">,</span> dy</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">x</span> <span class=\"token operator\">+=</span> dx<span class=\"token punctuation\">;</span>\n  \t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">y</span> <span class=\"token operator\">+=</span> dy<span class=\"token punctuation\">;</span>\n  \t<span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">const</span> point <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  point<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">moveBy</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  point<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">move</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>point<span class=\"token punctuation\">.</span><span class=\"token property-access\">x</span><span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">.</span><span class=\"token property-access\">y</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [3, 7]</span>\n  \n  <span class=\"token operator\">=</span><span class=\"token arrow operator\">=></span>\n  \n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createPoint</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">freeze</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">movePointBy</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dx<span class=\"token punctuation\">,</span> dy</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  \t<span class=\"token keyword control-flow\">return</span> <span class=\"token known-class-name class-name\">Object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">freeze</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">let</span> point <span class=\"token operator\">=</span> <span class=\"token function\">createPoint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  point <span class=\"token operator\">=</span> <span class=\"token function\">movePointBy</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  point <span class=\"token operator\">=</span> <span class=\"token function\">movePointBy</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span>\n</code></pre>","noteIndex":{"id":"rfaecb1r4pxpahsrighqpfi","title":"Dev","desc":"","updated":1666489926104,"created":1666489926104,"custom":{"nav_order":0,"permalink":"/"},"fname":"dev","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"5f3d9b993bc1c60c0e10119b00a45c49","links":[],"anchors":{},"children":["vmcgt1bw13lwsobet50r3vl","pj0dbesw2qm5j1tub9f34pg","e40hlh2wukm75vo4t8r9c7p","7xwnx64er01irhu8wg1q5zm","4buyekecqhzdg87aqxmh1rz","n1xmefdyaaztqb8wmsmqtjj","d8p9jq81rc0pfbbuzz7prah","yq2839iijurmzkrwkqwo9ps","51sfhirev9l2r8bef9utfb9","xuw6kyksesfaatsmt3gctyi","njc2zpmxz8izls7ogwdj20h","d3ma1d2r59fhejrl6bn9g0e","tgd9pt1fu1j4ejm4g09vlx4","5jlkrg4hx6dpy5tr55grkh6","ockg1gb78gpshwty5zjmvue","owsm2ti22dslhpk9oduhhku","52x2zgp7jpygai1h0jpv0t8","2d5oqog2rsdfdogne54tq9t"],"parent":null,"data":{},"body":""},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["dev","about"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Golbang Hacker","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","assetsPrefix":"/pks-publish","siteUrl":"https://b2sdev.github.io","theme":"dark","siteFaviconPath":"favicon.ico","siteIndex":"dev"}}},"__N_SSG":true}