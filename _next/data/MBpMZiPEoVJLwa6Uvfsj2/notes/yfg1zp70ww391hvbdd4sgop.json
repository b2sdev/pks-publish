{"pageProps":{"note":{"id":"yfg1zp70ww391hvbdd4sgop","title":"Databricks SQL","desc":"","updated":1670990707355,"created":1655698565248,"custom":{},"fname":"dev.data+ai.databricks.databrickssql","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"6c0d9fe7998e68ca7fd673622743a715","links":[],"anchors":{"databricks-sql":{"type":"header","text":"Databricks SQL","value":"databricks-sql","line":8,"column":0,"depth":2},"sql-엔드포인트":{"type":"header","text":"SQL 엔드포인트","value":"sql-엔드포인트","line":13,"column":0,"depth":2},"overwriting-a-table-vs-deleting-and-recreating-a-table":{"type":"header","text":"Overwriting a table vs Deleting and Recreating a table","value":"overwriting-a-table-vs-deleting-and-recreating-a-table","line":18,"column":0,"depth":2},"sql-reference":{"type":"header","text":"SQL Reference","value":"sql-reference","line":24,"column":0,"depth":2},"데이터베이스-생성":{"type":"header","text":"데이터베이스 생성","value":"데이터베이스-생성","line":26,"column":0,"depth":3},"테이블-생성":{"type":"header","text":"테이블 생성","value":"테이블-생성","line":31,"column":0,"depth":3},"사용자에게-권한-부여":{"type":"header","text":"사용자에게 권한 부여","value":"사용자에게-권한-부여","line":65,"column":0,"depth":3},"중복-제거":{"type":"header","text":"중복 제거","value":"중복-제거","line":71,"column":0,"depth":3},"upsert":{"type":"header","text":"Upsert","value":"upsert","line":76,"column":0,"depth":3},"window-functions":{"type":"header","text":"Window functions","value":"window-functions","line":105,"column":0,"depth":3},"tbd":{"type":"header","text":"TBD","value":"tbd","line":124,"column":0,"depth":3},"reference":{"type":"header","text":"Reference","value":"reference","line":136,"column":0,"depth":2}},"children":[],"parent":"skeuhenz2vf0ycgfmyy8pl1","data":{}},"body":"<h1 id=\"databricks-sql\">Databricks SQL<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#databricks-sql\"></a></h1>\n<h2 id=\"databricks-sql-1\">Databricks SQL<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#databricks-sql-1\"></a></h2>\n<ul>\n<li>데이터 레이크에서 빠른 임시 SQL을 실행할 수 있음</li>\n<li>쿼리 결과에 대한 다양한 시각화를 지원</li>\n</ul>\n<h2 id=\"sql-엔드포인트\">SQL 엔드포인트<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sql-엔드포인트\"></a></h2>\n<ul>\n<li>Databricks SQL 내의 데이터 개체에서 SQL 명령을 실행할 수 있는 계산 리소스\n<ul>\n<li>Azure Databricks 컴퓨팅 리소스의 한 유형</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"overwriting-a-table-vs-deleting-and-recreating-a-table\">Overwriting a table vs Deleting and Recreating a table<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#overwriting-a-table-vs-deleting-and-recreating-a-table\"></a></h2>\n<ul>\n<li>Overwriting a table is eficient because no files need to be deleted.</li>\n<li>Overwriting a table maintains the old version of the table for Time Travel.</li>\n<li>Overwriting a table is an atomic operation and will not leave the table in an unfinished state.</li>\n<li>Overwriting a table allows for concurrent queries to be completed while in progress.</li>\n</ul>\n<h2 id=\"sql-reference\">SQL Reference<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sql-reference\"></a></h2>\n<h3 id=\"데이터베이스-생성\">데이터베이스 생성<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#데이터베이스-생성\"></a></h3>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">DATABASE</span> <span class=\"token keyword\">IF</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span> customer360 LOCATION <span class=\"token string\">'/customer/customer360'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"테이블-생성\">테이블 생성<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#테이블-생성\"></a></h3>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> my_table <span class=\"token punctuation\">(</span>id STRING<span class=\"token punctuation\">,</span> <span class=\"token keyword\">value</span> STRING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">CREATE</span> <span class=\"token operator\">OR</span> <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">TABLE</span> table_name <span class=\"token punctuation\">(</span>\n    id STRING<span class=\"token punctuation\">,</span>\n    birthDate <span class=\"token keyword\">DATE</span><span class=\"token punctuation\">,</span>\n    avgRating <span class=\"token keyword\">FLOAT</span>\n<span class=\"token punctuation\">)</span>\n</code></pre>\n<p><code>CREATE OR REPLACE TABLE</code></p>\n<ul>\n<li>테이블이 없으면 새로 생성</li>\n<li>테이블이 있으면 테이블을 리셋\n<blockquote>\n<p>Delta Lake Table을 dropping하고 re-creating하는 것보다 REPLACE 명령을 사용할 것</p>\n</blockquote>\n</li>\n</ul>\n<p><code>CREATE TABLE IF NOT EXISTS</code></p>\n<ul>\n<li>테이블이 있으면 테이블이 생성되지 않고 명령이 무시됨</li>\n</ul>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> customersPerCountry <span class=\"token keyword\">AS</span>\n<span class=\"token keyword\">SELECT</span> country<span class=\"token punctuation\">,</span>\n       <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> customers\n<span class=\"token keyword\">FROM</span> customerLocations\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> country<span class=\"token punctuation\">;</span>\n</code></pre>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- Createa a CSV table from an external directory</span>\n<span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> student <span class=\"token keyword\">USING</span> CSV LOCATION <span class=\"token string\">'/mnt/csv_files'</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"사용자에게-권한-부여\">사용자에게 권한 부여<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#사용자에게-권한-부여\"></a></h3>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">ALL</span> PRIVILEAGES <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLE</span> sales <span class=\"token keyword\">TO</span> new<span class=\"token punctuation\">.</span>engineer<span class=\"token variable\">@company.com</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">ON</span> <span class=\"token keyword\">TABLE</span> sales <span class=\"token keyword\">TO</span> new<span class=\"token punctuation\">.</span>engineer<span class=\"token variable\">@company.com</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"중복-제거\">중복 제거<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#중복-제거\"></a></h3>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> my_table<span class=\"token punctuation\">;</span>\n</code></pre>\n<h3 id=\"upsert\">Upsert<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#upsert\"></a></h3>\n<p>To insert or update. If the item does not exist, add or insert it; if the item already exists, then update it with new information.</p>\n<ul>\n<li><code>MERGE SQL</code> operation : upsert data from a source table, view, or DataFrame into a target Delta table (supported only for Delta Lake tables)\n<ul>\n<li>만약 id가 있으면 -> to update rows</li>\n<li>id가 없으면 -> to insert new rows</li>\n</ul>\n</li>\n</ul>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">MERGE</span> <span class=\"token keyword\">INTO</span> people10m\n<span class=\"token keyword\">USING</span> people10mupdates\n<span class=\"token keyword\">ON</span> people10m<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> People10mupdates<span class=\"token punctuation\">.</span>id\n<span class=\"token keyword\">WHEN</span> <span class=\"token keyword\">MATCHED</span> <span class=\"token keyword\">THEN</span>\n  <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">SET</span>\n    id <span class=\"token operator\">=</span> people10mupdates<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n    firstName <span class=\"token operator\">=</span> people10mupdates<span class=\"token punctuation\">.</span>firstName<span class=\"token punctuation\">,</span>\n    ssn <span class=\"token operator\">=</span> people10mupdates<span class=\"token punctuation\">.</span>ssn\n<span class=\"token keyword\">WHEN</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">MATCHED</span>\n  <span class=\"token keyword\">THEN</span> <span class=\"token keyword\">INSERT</span> <span class=\"token punctuation\">(</span>\n    id<span class=\"token punctuation\">,</span>\n    firstName<span class=\"token punctuation\">,</span>\n    ssn\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span>\n    people10mupdates<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n    people10mupdates<span class=\"token punctuation\">.</span>firstName<span class=\"token punctuation\">,</span>\n    people10mupdates<span class=\"token punctuation\">.</span>ssn\n  <span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"window-functions\">Window functions<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#window-functions\"></a></h3>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span>\n    name\n  <span class=\"token punctuation\">,</span> dept\n  <span class=\"token punctuation\">,</span> salary\n  <span class=\"token punctuation\">,</span> RANK<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> dept <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> rank\n  <span class=\"token punctuation\">,</span> DENSE_RANK<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> dept <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> dense_rank\n  <span class=\"token punctuation\">,</span> DENSE_RANK<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> dept <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary\n                       <span class=\"token keyword\">ROWS</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token keyword\">UNBOUNDED</span> <span class=\"token keyword\">PRECEDING</span> <span class=\"token operator\">AND</span> <span class=\"token keyword\">CURRENT</span> <span class=\"token keyword\">ROW</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> dense_rank2\n  <span class=\"token punctuation\">,</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> dept <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> min\n  <span class=\"token punctuation\">,</span> LAG<span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> dept <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> lag\n  <span class=\"token punctuation\">,</span> LEAD<span class=\"token punctuation\">(</span>salary<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">OVER</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">PARTITION</span> <span class=\"token keyword\">BY</span> dept <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> salary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> lead\n<span class=\"token keyword\">FROM</span> employees\n<span class=\"token punctuation\">;</span>\n</code></pre>\n<p><img src=\"/pks-publish/assets/images/sql_result_window_functions.png\"></p>\n<h3 id=\"tbd\">TBD<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tbd\"></a></h3>\n<pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\">-- unnest</span>\n<span class=\"token comment\">-- card_id STRING, items ARRAY&#x3C;item_id:STRING> --> card_id STRING, item_id STRING</span>\n<span class=\"token keyword\">SELECT</span> cart_id<span class=\"token punctuation\">,</span> explode<span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> item_id <span class=\"token keyword\">FROM</span> raw_table<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- extract</span>\n<span class=\"token comment\">-- transaction_id STRING, payload ARRAY&#x3C;customer_id:STRING, date:TIMESTAMP, store_id:STRING></span>\n<span class=\"token comment\">-- --> transacction_id: STRING, date TIMESTAMP</span>\n<span class=\"token keyword\">SELECT</span> transaction_id<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">.</span><span class=\"token keyword\">date</span> <span class=\"token keyword\">FROM</span> raw_table<span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"reference\">Reference<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#reference\"></a></h2>\n<ul>\n<li><a href=\"https://docs.databricks.com/delta/merge.html\">Upsert into a Delta Lake table using merge</a></li>\n<li><a href=\"https://docs.databricks.com/sql/language-manual/sql-ref-syntax-ddl-create-table-using.html\">CREATE TABLE [USING]</a></li>\n<li><a href=\"https://docs.databricks.com/sql/language-manual/delta-merge-into.html\">MERGE INTO</a></li>\n<li><a href=\"https://docs.databricks.com/sql/language-manual/sql-ref-window-functions.html\">Window functions</a></li>\n</ul>","noteIndex":{"id":"rfaecb1r4pxpahsrighqpfi","title":"Dev","desc":"","updated":1666489926104,"created":1666489926104,"custom":{"nav_order":0,"permalink":"/"},"fname":"dev","type":"note","vault":{"fsPath":".","selfContained":true,"name":"Dendron"},"contentHash":"5f3d9b993bc1c60c0e10119b00a45c49","links":[],"anchors":{},"children":["vmcgt1bw13lwsobet50r3vl","pj0dbesw2qm5j1tub9f34pg","e40hlh2wukm75vo4t8r9c7p","7xwnx64er01irhu8wg1q5zm","4buyekecqhzdg87aqxmh1rz","n1xmefdyaaztqb8wmsmqtjj","d8p9jq81rc0pfbbuzz7prah","yq2839iijurmzkrwkqwo9ps","51sfhirev9l2r8bef9utfb9","xuw6kyksesfaatsmt3gctyi","njc2zpmxz8izls7ogwdj20h","d3ma1d2r59fhejrl6bn9g0e","tgd9pt1fu1j4ejm4g09vlx4","5jlkrg4hx6dpy5tr55grkh6","ockg1gb78gpshwty5zjmvue","owsm2ti22dslhpk9oduhhku","52x2zgp7jpygai1h0jpv0t8","2d5oqog2rsdfdogne54tq9t"],"parent":null,"data":{},"body":""},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"Dendron"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["dev","about"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Golbang Hacker","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","assetsPrefix":"/pks-publish","siteUrl":"https://b2sdev.github.io","theme":"dark","siteFaviconPath":"favicon.ico","siteIndex":"dev"}}},"__N_SSG":true}